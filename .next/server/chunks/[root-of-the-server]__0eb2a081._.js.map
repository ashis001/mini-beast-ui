{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Extreme%20SSD/minibeast-ui/src/lib/db.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\n\n// Ensure env vars are loaded (Next.js will load .env.local automatically)\nconst {\n  MYSQL_HOST,\n  MYSQL_USER,\n  MYSQL_PASSWORD,\n  MYSQL_DATABASE,\n  MYSQL_PORT\n} = process.env;\n\nif (!MYSQL_HOST || !MYSQL_USER || !MYSQL_PASSWORD || !MYSQL_DATABASE) {\n  // We keep this throw so misconfig surfaces early on the server\n  throw new Error('Missing MySQL env vars. Please set MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE');\n}\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var __mysqlPool: mysql.Pool | undefined;\n}\n\nfunction createPool() {\n  return mysql.createPool({\n    host: MYSQL_HOST,\n    user: MYSQL_USER,\n    password: MYSQL_PASSWORD,\n    database: MYSQL_DATABASE,\n    port: MYSQL_PORT ? Number(MYSQL_PORT) : 3306,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    // Important for shared hosts using older TLS/defaults\n    // ssl: { rejectUnauthorized: true }, // enable if your host requires SSL\n  });\n}\n\nexport const pool: mysql.Pool = global.__mysqlPool ?? createPool();\n\nif (process.env.NODE_ENV !== 'production') {\n  global.__mysqlPool = pool;\n}\n\nexport default pool;\n"],"names":[],"mappings":";;;;;;;;;;AAEA,0EAA0E;AAC1E,MAAM,EACJ,UAAU,EACV,UAAU,EACV,cAAc,EACd,cAAc,EACd,UAAU,EACX,GAAG,QAAQ,GAAG;AAEf,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kBAAkB,CAAC,gBAAgB;IACpE,+DAA+D;IAC/D,MAAM,IAAI,MAAM;AAClB;AAOA,SAAS;IACP,OAAO,MAAM,UAAU,CAAC;QACtB,MAAM;QACN,MAAM;QACN,UAAU;QACV,UAAU;QACV,MAAM,aAAa,OAAO,cAAc;QACxC,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;IAGd;AACF;AAEO,MAAM,OAAmB,OAAO,WAAW,IAAI;AAEtD,wCAA2C;IACzC,OAAO,WAAW,GAAG;AACvB;uCAEe","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Extreme%20SSD/minibeast-ui/src/lib/data.ts"],"sourcesContent":["import pool from './db';\nimport type { Contact } from '@/lib/types';\n\nasync function queryDatabase<T>(sql: string, params: any[] = []): Promise<T[]> {\n  let connection;\n  try {\n    connection = await pool.getConnection();\n    const [rows] = await connection.query(sql, params);\n    return rows as T[];\n  } finally {\n    if (connection) connection.release();\n  }\n}\n\nexport async function addContact(input: {\n  name: string;\n  email?: string;\n  phone?: string;\n  message?: string;\n}): Promise<Contact> {\n  let conn: any;\n  try {\n    conn = await pool.getConnection();\n    await conn.beginTransaction();\n\n    const sql = 'INSERT INTO `contacts` (`name`, `email`, `phone`, `message`) VALUES (?, ?, ?, ?)';\n    const values = [input.name, input.email || null, input.phone || null, input.message || null];\n\n    const [result]: any = await conn.query(sql, values);\n    const insertId = result.insertId as number;\n\n    const [rows] = await conn.query('SELECT * FROM `contacts` WHERE `id` = ?', [insertId]);\n\n    await conn.commit();\n    return (rows as Contact[])[0];\n  } catch (err) {\n    if (conn) await conn.rollback();\n    throw err;\n  } finally {\n    if (conn) conn.release();\n  }\n}\n\nexport async function listContacts(limit = 50): Promise<Contact[]> {\n  return queryDatabase<Contact>('SELECT * FROM `contacts` ORDER BY `id` DESC LIMIT ?', [limit]);\n}\n"],"names":[],"mappings":";;;;AAAA;;AAGA,eAAe,cAAiB,GAAW,EAAE,SAAgB,EAAE;IAC7D,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,kHAAA,CAAA,UAAI,CAAC,aAAa;QACrC,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,KAAK,CAAC,KAAK;QAC3C,OAAO;IACT,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF;AAEO,eAAe,WAAW,KAKhC;IACC,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,kHAAA,CAAA,UAAI,CAAC,aAAa;QAC/B,MAAM,KAAK,gBAAgB;QAE3B,MAAM,MAAM;QACZ,MAAM,SAAS;YAAC,MAAM,IAAI;YAAE,MAAM,KAAK,IAAI;YAAM,MAAM,KAAK,IAAI;YAAM,MAAM,OAAO,IAAI;SAAK;QAE5F,MAAM,CAAC,OAAO,GAAQ,MAAM,KAAK,KAAK,CAAC,KAAK;QAC5C,MAAM,WAAW,OAAO,QAAQ;QAEhC,MAAM,CAAC,KAAK,GAAG,MAAM,KAAK,KAAK,CAAC,2CAA2C;YAAC;SAAS;QAErF,MAAM,KAAK,MAAM;QACjB,OAAO,AAAC,IAAkB,CAAC,EAAE;IAC/B,EAAE,OAAO,KAAK;QACZ,IAAI,MAAM,MAAM,KAAK,QAAQ;QAC7B,MAAM;IACR,SAAU;QACR,IAAI,MAAM,KAAK,OAAO;IACxB;AACF;AAEO,eAAe,aAAa,QAAQ,EAAE;IAC3C,OAAO,cAAuB,uDAAuD;QAAC;KAAM;AAC9F","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Extreme%20SSD/minibeast-ui/src/app/api/contact/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { addContact } from '@/lib/data';\n\nexport const runtime = 'nodejs';\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json().catch(() => ({}));\n    const name = (body.name ?? '').toString().trim();\n    const email = (body.email ?? '').toString().trim() || undefined;\n    const phone = (body.phone ?? '').toString().trim() || undefined;\n    const message = (body.message ?? '').toString().trim() || undefined;\n\n    if (!name) {\n      return NextResponse.json({ error: 'Name is required' }, { status: 400 });\n    }\n\n    const contact = await addContact({ name, email, phone, message });\n    return NextResponse.json({ success: true, contact });\n  } catch (error: any) {\n    console.error('POST /api/contact error:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,UAAU;AAEhB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;QACjD,MAAM,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI;QAC9C,MAAM,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM;QACtD,MAAM,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM;QACtD,MAAM,UAAU,CAAC,KAAK,OAAO,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM;QAE1D,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,MAAM,UAAU,MAAM,CAAA,GAAA,oHAAA,CAAA,aAAU,AAAD,EAAE;YAAE;YAAM;YAAO;YAAO;QAAQ;QAC/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAQ;IACpD,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}