{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Extreme%20SSD/minibeast-ui/src/lib/db.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\n\n// Ensure env vars are loaded (Next.js will load .env.local automatically)\nconst {\n  MYSQL_HOST,\n  MYSQL_USER,\n  MYSQL_PASSWORD,\n  MYSQL_DATABASE,\n  MYSQL_PORT\n} = process.env;\n\nif (!MYSQL_HOST || !MYSQL_USER || !MYSQL_PASSWORD || !MYSQL_DATABASE) {\n  // We keep this throw so misconfig surfaces early on the server\n  throw new Error('Missing MySQL env vars. Please set MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE');\n}\n\nconst useSSL = process.env.MYSQL_SSL === 'true';\nconst rejectUnauthorized = process.env.MYSQL_SSL_REJECT_UNAUTHORIZED !== 'false';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var __mysqlPool: mysql.Pool | undefined;\n}\n\nfunction createPool() {\n  return mysql.createPool({\n    host: MYSQL_HOST,\n    user: MYSQL_USER,\n    password: MYSQL_PASSWORD,\n    database: MYSQL_DATABASE,\n    port: MYSQL_PORT ? Number(MYSQL_PORT) : 3306,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    // Optional SSL for Hostinger/remote MySQL\n    ssl: useSSL ? { rejectUnauthorized } : undefined,\n  });\n}\n\nexport const pool: mysql.Pool = global.__mysqlPool ?? createPool();\n\nif (process.env.NODE_ENV !== 'production') {\n  global.__mysqlPool = pool;\n}\n\nexport default pool;\n"],"names":[],"mappings":";;;;AAAA;;AAEA,0EAA0E;AAC1E,MAAM,EACJ,UAAU,EACV,UAAU,EACV,cAAc,EACd,cAAc,EACd,UAAU,EACX,GAAG,QAAQ,GAAG;AAEf,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,kBAAkB,CAAC,gBAAgB;IACpE,+DAA+D;IAC/D,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,SAAS,KAAK;AACzC,MAAM,qBAAqB,QAAQ,GAAG,CAAC,6BAA6B,KAAK;AAOzE,SAAS;IACP,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;QACtB,MAAM;QACN,MAAM;QACN,UAAU;QACV,UAAU;QACV,MAAM,aAAa,OAAO,cAAc;QACxC,oBAAoB;QACpB,iBAAiB;QACjB,YAAY;QACZ,0CAA0C;QAC1C,KAAK,SAAS;YAAE;QAAmB,IAAI;IACzC;AACF;AAEO,MAAM,OAAmB,OAAO,WAAW,IAAI;AAEtD,wCAA2C;IACzC,OAAO,WAAW,GAAG;AACvB;uCAEe","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Extreme%20SSD/minibeast-ui/src/lib/data.ts"],"sourcesContent":["import pool from './db';\nimport type { Contact, Lead } from '@/lib/types';\n\nasync function queryDatabase<T>(sql: string, params: any[] = []): Promise<T[]> {\n  let connection;\n  try {\n    connection = await pool.getConnection();\n    const [rows] = await connection.query(sql, params);\n    return rows as T[];\n  } finally {\n    if (connection) connection.release();\n  }\n}\n\nexport async function addContact(input: {\n  name: string;\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  phone?: string;\n  company?: string;\n  jobTitle?: string;\n  country?: string;\n  zip?: string;\n  consent?: boolean;\n  message?: string;\n}): Promise<Contact> {\n  let conn: any;\n  try {\n    conn = await pool.getConnection();\n    await conn.beginTransaction();\n\n    const sql = 'INSERT INTO `contacts` (`name`, `first_name`, `last_name`, `email`, `phone`, `company`, `job_title`, `country`, `zip`, `consent`, `message`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)';\n    const values = [\n      input.name,\n      input.firstName || null,\n      input.lastName || null,\n      input.email || null,\n      input.phone || null,\n      input.company || null,\n      input.jobTitle || null,\n      input.country || null,\n      input.zip || null,\n      input.consent ? 1 : 0,\n      input.message || null,\n    ];\n\n    const [result]: any = await conn.query(sql, values);\n    const insertId = result.insertId as number;\n\n    const [rows] = await conn.query('SELECT * FROM `contacts` WHERE `id` = ?', [insertId]);\n\n    await conn.commit();\n    return (rows as Contact[])[0];\n  } catch (err) {\n    if (conn) await conn.rollback();\n    throw err;\n  } finally {\n    if (conn) conn.release();\n  }\n}\n\nexport async function listContacts(limit = 50): Promise<Contact[]> {\n  return queryDatabase<Contact>('SELECT * FROM `contacts` ORDER BY `id` DESC LIMIT ?', [limit]);\n}\n\nexport async function addLead(input: {\n  adminUserId?: number;\n  customerName: string;\n  customerPhone: string;\n  customerEmail?: string;\n  customerAddress?: string;\n  interestedItemId?: number | null;\n  notes?: string;\n  status?: 'new' | 'contacted' | 'qualified' | 'lost' | 'won';\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  followUpDate?: string | null; // YYYY-MM-DD\n}): Promise<Lead> {\n  const sql = `INSERT INTO \\`leads\\` (\n      \\`admin_user_id\\`, \\`customer_name\\`, \\`customer_phone\\`, \\`customer_email\\`, \\`customer_address\\`,\n      \\`interested_item_id\\`, \\`notes\\`, \\`status\\`, \\`priority\\`, \\`follow_up_date\\`\n    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`;\n  const values = [\n    input.adminUserId ?? 1,\n    input.customerName,\n    input.customerPhone,\n    input.customerEmail || null,\n    input.customerAddress || null,\n    input.interestedItemId ?? null,\n    input.notes || null,\n    input.status ?? 'new',\n    input.priority ?? 'medium',\n    input.followUpDate ?? null,\n  ];\n\n  const [result]: any = await pool.query(sql, values);\n  const id = result.insertId as number;\n  const rows = await queryDatabase<Lead>('SELECT * FROM `leads` WHERE `id` = ?', [id]);\n  return rows[0];\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAGA,eAAe,cAAiB,GAAW,EAAE,SAAgB,EAAE;IAC7D,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,kHAAA,CAAA,UAAI,CAAC,aAAa;QACrC,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,KAAK,CAAC,KAAK;QAC3C,OAAO;IACT,SAAU;QACR,IAAI,YAAY,WAAW,OAAO;IACpC;AACF;AAEO,eAAe,WAAW,KAYhC;IACC,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,kHAAA,CAAA,UAAI,CAAC,aAAa;QAC/B,MAAM,KAAK,gBAAgB;QAE3B,MAAM,MAAM;QACZ,MAAM,SAAS;YACb,MAAM,IAAI;YACV,MAAM,SAAS,IAAI;YACnB,MAAM,QAAQ,IAAI;YAClB,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;YACf,MAAM,OAAO,IAAI;YACjB,MAAM,QAAQ,IAAI;YAClB,MAAM,OAAO,IAAI;YACjB,MAAM,GAAG,IAAI;YACb,MAAM,OAAO,GAAG,IAAI;YACpB,MAAM,OAAO,IAAI;SAClB;QAED,MAAM,CAAC,OAAO,GAAQ,MAAM,KAAK,KAAK,CAAC,KAAK;QAC5C,MAAM,WAAW,OAAO,QAAQ;QAEhC,MAAM,CAAC,KAAK,GAAG,MAAM,KAAK,KAAK,CAAC,2CAA2C;YAAC;SAAS;QAErF,MAAM,KAAK,MAAM;QACjB,OAAO,AAAC,IAAkB,CAAC,EAAE;IAC/B,EAAE,OAAO,KAAK;QACZ,IAAI,MAAM,MAAM,KAAK,QAAQ;QAC7B,MAAM;IACR,SAAU;QACR,IAAI,MAAM,KAAK,OAAO;IACxB;AACF;AAEO,eAAe,aAAa,QAAQ,EAAE;IAC3C,OAAO,cAAuB,uDAAuD;QAAC;KAAM;AAC9F;AAEO,eAAe,QAAQ,KAW7B;IACC,MAAM,MAAM,CAAC;;;2CAG4B,CAAC;IAC1C,MAAM,SAAS;QACb,MAAM,WAAW,IAAI;QACrB,MAAM,YAAY;QAClB,MAAM,aAAa;QACnB,MAAM,aAAa,IAAI;QACvB,MAAM,eAAe,IAAI;QACzB,MAAM,gBAAgB,IAAI;QAC1B,MAAM,KAAK,IAAI;QACf,MAAM,MAAM,IAAI;QAChB,MAAM,QAAQ,IAAI;QAClB,MAAM,YAAY,IAAI;KACvB;IAED,MAAM,CAAC,OAAO,GAAQ,MAAM,kHAAA,CAAA,UAAI,CAAC,KAAK,CAAC,KAAK;IAC5C,MAAM,KAAK,OAAO,QAAQ;IAC1B,MAAM,OAAO,MAAM,cAAoB,wCAAwC;QAAC;KAAG;IACnF,OAAO,IAAI,CAAC,EAAE;AAChB","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Extreme%20SSD/minibeast-ui/src/app/api/demo/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { addLead } from '@/lib/data';\n\nexport const runtime = 'nodejs';\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json().catch(() => ({}));\n\n    // Required\n    const customerPhone = (body.customerPhone ?? '').toString().trim();\n    const customerNameRaw = (body.customerName ?? '').toString().trim();\n\n    if (!customerPhone) {\n      return NextResponse.json({ error: 'Phone is required' }, { status: 400 });\n    }\n\n    // Optional\n    const firstName = (body.firstName ?? '').toString().trim();\n    const lastName = (body.lastName ?? '').toString().trim();\n    const customerName = customerNameRaw || `${firstName} ${lastName}`.trim() || 'Anonymous';\n\n    const customerEmail = (body.customerEmail ?? '').toString().trim() || undefined;\n    const customerAddress = (body.customerAddress ?? '').toString().trim() || undefined;\n    const interestedItemId = typeof body.interestedItemId === 'number' ? body.interestedItemId : undefined;\n    const notes = (body.notes ?? '').toString().trim() || undefined;\n    const status = (body.status ?? 'new') as 'new' | 'contacted' | 'qualified' | 'lost' | 'won';\n    const priority = (body.priority ?? 'medium') as 'low' | 'medium' | 'high' | 'urgent';\n    const followUpDate = (body.followUpDate ?? '').toString().trim() || undefined; // YYYY-MM-DD\n\n    const lead = await addLead({\n      customerName,\n      customerPhone,\n      customerEmail,\n      customerAddress,\n      interestedItemId: interestedItemId ?? null,\n      notes,\n      status,\n      priority,\n      followUpDate: followUpDate ?? null,\n    });\n\n    return NextResponse.json({ success: true, lead });\n  } catch (error: any) {\n    console.error('POST /api/demo error:', error);\n    const message = error?.message || 'Internal Server Error';\n    return NextResponse.json({ error: message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,UAAU;AAEhB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;QAEjD,WAAW;QACX,MAAM,gBAAgB,CAAC,KAAK,aAAa,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI;QAChE,MAAM,kBAAkB,CAAC,KAAK,YAAY,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI;QAEjE,IAAI,CAAC,eAAe;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,WAAW;QACX,MAAM,YAAY,CAAC,KAAK,SAAS,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI;QACxD,MAAM,WAAW,CAAC,KAAK,QAAQ,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI;QACtD,MAAM,eAAe,mBAAmB,GAAG,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,MAAM;QAE7E,MAAM,gBAAgB,CAAC,KAAK,aAAa,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM;QACtE,MAAM,kBAAkB,CAAC,KAAK,eAAe,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM;QAC1E,MAAM,mBAAmB,OAAO,KAAK,gBAAgB,KAAK,WAAW,KAAK,gBAAgB,GAAG;QAC7F,MAAM,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM;QACtD,MAAM,SAAU,KAAK,MAAM,IAAI;QAC/B,MAAM,WAAY,KAAK,QAAQ,IAAI;QACnC,MAAM,eAAe,CAAC,KAAK,YAAY,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,MAAM,WAAW,aAAa;QAE5F,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,UAAO,AAAD,EAAE;YACzB;YACA;YACA;YACA;YACA,kBAAkB,oBAAoB;YACtC;YACA;YACA;YACA,cAAc,gBAAgB;QAChC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,UAAU,OAAO,WAAW;QAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC7D;AACF","debugId":null}}]
}